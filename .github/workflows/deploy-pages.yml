name: Deploy to GitHub Pages

# Trigger deployment to test environment configuration
on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        run: |
          # Debug: Print environment info
          echo "Repository: $GITHUB_REPOSITORY"
          echo "Ref: $GITHUB_REF"
          
          # Create and move to a clean directory
          mkdir -p /tmp/build
          cd /tmp/build
          
          # Clone the repository and fetch all branches
          git clone --branch master https://${DEPLOY_TOKEN}@github.com/${GITHUB_REPOSITORY}.git .
          git fetch origin
          
          # Debug: List directories
          echo "Current directory contents:"
          ls -la
          
          # Verify clone was successful
          if [ ! -d "frontend" ]; then
            echo "Error: frontend directory not found after clone"
            pwd
            exit 1
          fi
          
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
        env:
          DEPLOY_TOKEN: ${{ secrets.DEPLOY_TOKEN }}

      - name: Setup Node
        working-directory: /tmp/build
        run: |
          curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
          sudo apt-get install -y nodejs
          node --version
          npm --version

      - name: Build Frontend
        working-directory: /tmp/build/frontend
        run: |
          # Debug: Print directory contents
          echo "Frontend directory contents:"
          ls -la
          
          npm ci
          npm run build
        env:
          VITE_BACKEND_URL: ${{ secrets.VITE_BACKEND_URL }}
          VITE_POLYGON_API_KEY: ${{ secrets.VITE_POLYGON_API_KEY }}
          VITE_ALPACA_API_KEY: ${{ secrets.VITE_ALPACA_API_KEY }}
          VITE_ALPACA_SECRET_KEY: ${{ secrets.VITE_ALPACA_SECRET_KEY }}

      - name: Deploy
        working-directory: /tmp/build
        run: |
          # Create a temporary directory for deployment
          mkdir -p /tmp/deploy
          
          # Copy only the built files
          cp -r frontend/dist/* /tmp/deploy/
          cd /tmp/deploy
          touch .nojekyll
          
          # Initialize new git repository for deployment
          git init
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          
          # Add and commit files
          git add .
          git commit -m "Deploy to GitHub Pages"
          
          # Push to gh-pages branch
          git remote add origin https://${DEPLOY_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
          git push -f origin HEAD:gh-pages
        env:
          DEPLOY_TOKEN: ${{ secrets.DEPLOY_TOKEN }} 