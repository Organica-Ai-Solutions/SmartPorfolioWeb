name: Deploy to GitHub Pages

on:
  push:
    branches: [ master ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # Checkout repository
      - name: Checkout
        run: |
          git clone https://github.com/${{ github.repository }}.git .
          git checkout ${{ github.ref_name }}

      # Setup Node.js using a shell command
      - name: Setup Node.js
        run: |
          # Install nvm
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh | bash
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
          # Install Node.js
          nvm install 18
          nvm use 18

      # Install dependencies
      - name: Install Dependencies
        working-directory: ./frontend
        run: npm ci

      # Build
      - name: Build
        working-directory: ./frontend
        run: npm run build
        env:
          VITE_API_URL: 'https://smartportfolio-backend.onrender.com'
          DEPLOY_TARGET: 'github-pages'

      # Deploy using git commands
      - name: Deploy to GitHub Pages
        run: |
          cd frontend/dist
          git init
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add .
          git commit -m "Deploy to GitHub Pages"
          git push -f https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git HEAD:gh-pages 